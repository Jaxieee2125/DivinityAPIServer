"""
Django settings for MusicServer project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
from django.conf import settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5s4_o%50io&vp_3#keu!2yh5nh-og$b(hhsh^0jq(yq)pm4di6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_simplejwt',
    'rest_framework',
    'corsheaders',
    'MusicAPI',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware', # Giữ lại cho Django Admin UI
    'corsheaders.middleware.CorsMiddleware',          # <<< Đặt ở đây
    'django.middleware.common.CommonMiddleware',      # <<< Chỉ một dòng
    'django.middleware.csrf.CsrfViewMiddleware',      # <<< Giữ lại nếu dùng Session/Admin UI, bỏ nếu API hoàn toàn stateless
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Giữ lại cho Django Admin UI và request.user
    'django.contrib.messages.middleware.MessageMiddleware', # Giữ lại cho Django Admin UI
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MusicServer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MusicServer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'Storage')

if not os.path.exists(MEDIA_ROOT):
    os.makedirs(MEDIA_ROOT)
    
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # Sử dụng JWT làm phương thức xác thực chính/mặc định
        'MusicAPI.authentication.CustomJWTAuthentication',
        # Bạn có thể giữ lại các phương thức khác nếu cần (vd: Session cho Django Admin UI)
        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # Mặc định, yêu cầu người dùng phải là Admin (is_staff=True)
        # cho TẤT CẢ các API endpoints.
        # Bạn sẽ cần override permission này cho các API public (nếu có).
        'MusicAPI.permissions.IsAdminFromMongo',
        # Hoặc 'rest_framework.permissions.IsAuthenticated' nếu chỉ cần đăng nhập
        # Hoặc 'rest_framework.permissions.AllowAny' nếu muốn public mặc định
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser' # <<< Đảm bảo có parser này
    ],
    # ... các settings khác của DRF ...
    }

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1), # Ví dụ: Access token hết hạn sau 60 phút
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),    # Ví dụ: Refresh token hết hạn sau 1 ngày
    "ROTATE_REFRESH_TOKENS": False, # Đặt là True nếu muốn refresh token cũ bị vô hiệu khi tạo mới
    "BLACKLIST_AFTER_ROTATION": False, # Cần cài đặt thêm nếu muốn blacklist token cũ
    "UPDATE_LAST_LOGIN": True, # Cập nhật last_login của user khi login thành công

    "ALGORITHM": "HS256",
    "SIGNING_KEY": settings.SECRET_KEY, # Dùng SECRET_KEY mặc định của Django
    "VERIFYING_KEY": None,
    "AUDIENCE": None,
    "ISSUER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",), # Chỉ chấp nhận header "Bearer <token>"
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id", # Trường ID trong model User của Django
    "USER_ID_CLAIM": "user_mongo_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "MusicAPI.token_user.MongoTokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5), # Không dùng nếu không bật sliding tokens
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1), # Không dùng nếu không bật sliding tokens
}